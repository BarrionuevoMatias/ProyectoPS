// <auto-generated />
using System;
using Infraestructura.datos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infraestructura.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250423203543_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Dominio.entidades.ApprovalRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ApproverRoleId")
                        .HasColumnType("int");

                    b.Property<int?>("Area")
                        .HasColumnType("int");

                    b.Property<decimal>("MaxAmount")
                        .HasColumnType("decimal(38,2)");

                    b.Property<decimal>("MinAmount")
                        .HasColumnType("decimal(38,2)");

                    b.Property<int>("StepOrder")
                        .HasColumnType("int");

                    b.Property<int?>("type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApproverRoleId");

                    b.HasIndex("Area");

                    b.HasIndex("type");

                    b.ToTable("ApprovalRule", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApproverRoleId = 1,
                            MaxAmount = 100000m,
                            MinAmount = 0m,
                            StepOrder = 1
                        },
                        new
                        {
                            Id = 2,
                            ApproverRoleId = 2,
                            MaxAmount = 20000m,
                            MinAmount = 5000m,
                            StepOrder = 2
                        },
                        new
                        {
                            Id = 3,
                            ApproverRoleId = 2,
                            Area = 2,
                            MaxAmount = 20000m,
                            MinAmount = 0m,
                            StepOrder = 1,
                            type = 2
                        },
                        new
                        {
                            Id = 4,
                            ApproverRoleId = 3,
                            MaxAmount = 79228162514264337593543950335m,
                            MinAmount = 20000m,
                            StepOrder = 3
                        },
                        new
                        {
                            Id = 5,
                            ApproverRoleId = 2,
                            Area = 1,
                            MaxAmount = 79228162514264337593543950335m,
                            MinAmount = 5000m,
                            StepOrder = 2,
                            type = 1
                        },
                        new
                        {
                            Id = 6,
                            ApproverRoleId = 1,
                            MaxAmount = 10000m,
                            MinAmount = 0m,
                            StepOrder = 1,
                            type = 2
                        },
                        new
                        {
                            Id = 7,
                            ApproverRoleId = 4,
                            Area = 2,
                            MaxAmount = 10000m,
                            MinAmount = 0m,
                            StepOrder = 1,
                            type = 1
                        },
                        new
                        {
                            Id = 8,
                            ApproverRoleId = 2,
                            Area = 2,
                            MaxAmount = 30000m,
                            MinAmount = 10000m,
                            StepOrder = 2
                        },
                        new
                        {
                            Id = 9,
                            ApproverRoleId = 3,
                            Area = 3,
                            MaxAmount = 79228162514264337593543950335m,
                            MinAmount = 30000m,
                            StepOrder = 2
                        },
                        new
                        {
                            Id = 10,
                            ApproverRoleId = 4,
                            MaxAmount = 50000m,
                            MinAmount = 0m,
                            StepOrder = 1,
                            type = 4
                        });
                });

            modelBuilder.Entity("Dominio.entidades.ApprovalStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.ToTable("ApprovalStatus", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Pending"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Approved"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Rejected"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Observed"
                        });
                });

            modelBuilder.Entity("Dominio.entidades.ApproverRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.ToTable("ApproverRole", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Líder de Área"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Gerente"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Director"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Comité Técnico"
                        });
                });

            modelBuilder.Entity("Dominio.entidades.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.ToTable("Area", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Finanzas"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Tecnología"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Recursos Humanos"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Operaciones"
                        });
                });

            modelBuilder.Entity("Dominio.entidades.ProjectApprovalStep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApproverRoleId")
                        .HasColumnType("int");

                    b.Property<int?>("ApproverUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DecisionDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Observations")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int>("ProjectProposalId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("StepOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApproverRoleId");

                    b.HasIndex("ApproverUserId");

                    b.HasIndex("ProjectProposalId");

                    b.HasIndex("Status");

                    b.ToTable("ProjectApprovalStep", (string)null);
                });

            modelBuilder.Entity("Dominio.entidades.ProjectProposal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ApproverRoleId")
                        .HasColumnType("int");

                    b.Property<int>("Area")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal>("EstimatedAmount")
                        .HasColumnType("decimal(38,2)");

                    b.Property<int>("EstimatedDuration")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApproverRoleId");

                    b.HasIndex("Area");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("Status");

                    b.HasIndex("type");

                    b.ToTable("ProjectProposal", (string)null);
                });

            modelBuilder.Entity("Dominio.entidades.ProjectType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.ToTable("Projectype", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Mejora de procesos"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Innovación y desarrollo"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Infraestructura"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Capacitación interna"
                        });
                });

            modelBuilder.Entity("Dominio.entidades.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Role");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "jferreyra@unaj.com",
                            Name = "Jose Ferreyra",
                            Role = 2
                        },
                        new
                        {
                            Id = 2,
                            Email = "alucero@unaj.com",
                            Name = "Ana Lucero",
                            Role = 1
                        },
                        new
                        {
                            Id = 3,
                            Email = "gmolinas@unaj.com",
                            Name = "Gonzalo Molinas",
                            Role = 2
                        },
                        new
                        {
                            Id = 4,
                            Email = "lolivera@unaj.com",
                            Name = "Lucas Olivera",
                            Role = 3
                        },
                        new
                        {
                            Id = 5,
                            Email = "dfagundez@unaj.com",
                            Name = "Danilo Fagundez",
                            Role = 4
                        },
                        new
                        {
                            Id = 6,
                            Email = "ggalli@unaj.com",
                            Name = "Gabriel Galli",
                            Role = 4
                        });
                });

            modelBuilder.Entity("Dominio.entidades.ApprovalRule", b =>
                {
                    b.HasOne("Dominio.entidades.ApproverRole", "ApproverRole")
                        .WithMany("ApprovalRules")
                        .HasForeignKey("ApproverRoleId");

                    b.HasOne("Dominio.entidades.Area", "AreaNavigation")
                        .WithMany("ApprovalRules")
                        .HasForeignKey("Area");

                    b.HasOne("Dominio.entidades.ProjectType", "TypeNavigation")
                        .WithMany("ApprovalRules")
                        .HasForeignKey("type");

                    b.Navigation("ApproverRole");

                    b.Navigation("AreaNavigation");

                    b.Navigation("TypeNavigation");
                });

            modelBuilder.Entity("Dominio.entidades.ProjectApprovalStep", b =>
                {
                    b.HasOne("Dominio.entidades.ApproverRole", "ApproverRole")
                        .WithMany("ProjectApprovalSteps")
                        .HasForeignKey("ApproverRoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.entidades.User", "ApproverUser")
                        .WithMany("ProjectApprovalSteps")
                        .HasForeignKey("ApproverUserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Dominio.entidades.ProjectProposal", "ProjectProposal")
                        .WithMany("ProjectApprovalSteps")
                        .HasForeignKey("ProjectProposalId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.entidades.ApprovalStatus", "StatusNavigation")
                        .WithMany("ProjectApprovalSteps")
                        .HasForeignKey("Status")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ApproverRole");

                    b.Navigation("ApproverUser");

                    b.Navigation("ProjectProposal");

                    b.Navigation("StatusNavigation");
                });

            modelBuilder.Entity("Dominio.entidades.ProjectProposal", b =>
                {
                    b.HasOne("Dominio.entidades.ApproverRole", null)
                        .WithMany("ProjectProposals")
                        .HasForeignKey("ApproverRoleId");

                    b.HasOne("Dominio.entidades.Area", "AreaNavigation")
                        .WithMany("ProjectProposals")
                        .HasForeignKey("Area")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.entidades.User", "CreatedByNavigation")
                        .WithMany("ProjectProposals")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.entidades.ApprovalStatus", "StatusNavigation")
                        .WithMany("ProjectProposals")
                        .HasForeignKey("Status")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dominio.entidades.ProjectType", "TypeNavigation")
                        .WithMany("ProjectProposals")
                        .HasForeignKey("type")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AreaNavigation");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("StatusNavigation");

                    b.Navigation("TypeNavigation");
                });

            modelBuilder.Entity("Dominio.entidades.User", b =>
                {
                    b.HasOne("Dominio.entidades.ApproverRole", "ApproverRole")
                        .WithMany("Users")
                        .HasForeignKey("Role")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApproverRole");
                });

            modelBuilder.Entity("Dominio.entidades.ApprovalStatus", b =>
                {
                    b.Navigation("ProjectApprovalSteps");

                    b.Navigation("ProjectProposals");
                });

            modelBuilder.Entity("Dominio.entidades.ApproverRole", b =>
                {
                    b.Navigation("ApprovalRules");

                    b.Navigation("ProjectApprovalSteps");

                    b.Navigation("ProjectProposals");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Dominio.entidades.Area", b =>
                {
                    b.Navigation("ApprovalRules");

                    b.Navigation("ProjectProposals");
                });

            modelBuilder.Entity("Dominio.entidades.ProjectProposal", b =>
                {
                    b.Navigation("ProjectApprovalSteps");
                });

            modelBuilder.Entity("Dominio.entidades.ProjectType", b =>
                {
                    b.Navigation("ApprovalRules");

                    b.Navigation("ProjectProposals");
                });

            modelBuilder.Entity("Dominio.entidades.User", b =>
                {
                    b.Navigation("ProjectApprovalSteps");

                    b.Navigation("ProjectProposals");
                });
#pragma warning restore 612, 618
        }
    }
}
